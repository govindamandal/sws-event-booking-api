{
    "openapi": "3.0.0",
    "info": {
        "title": "Your API Title",
        "description": "This is the API documentation for your Laravel application.",
        "version": "1.0.0"
    },
    "servers": [
        {
            "url": "http://localhost:8000",
            "description": "API Server"
        }
    ],
    "paths": {
        "/api/attendees": {
            "get": {
                "tags": [
                    "Attendees"
                ],
                "summary": "List all attendees",
                "operationId": "07252fa9523cadea6324ea21430db788",
                "responses": {
                    "200": {
                        "description": "List of attendees",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "type": "array",
                                    "items": {
                                        "$ref": "#/components/schemas/Attendee"
                                    }
                                }
                            }
                        }
                    }
                }
            },
            "post": {
                "tags": [
                    "Attendees"
                ],
                "summary": "Register a new attendee",
                "operationId": "1b7f6aec6b49c9767416d8bddd81519b",
                "requestBody": {
                    "required": true,
                    "content": {
                        "application/json": {
                            "schema": {
                                "required": [
                                    "name",
                                    "email"
                                ],
                                "properties": {
                                    "name": {
                                        "type": "string",
                                        "example": "John Doe"
                                    },
                                    "email": {
                                        "type": "string",
                                        "format": "email",
                                        "example": "john@example.com"
                                    }
                                },
                                "type": "object"
                            }
                        }
                    }
                },
                "responses": {
                    "201": {
                        "description": "Attendee created",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/Attendee"
                                }
                            }
                        }
                    },
                    "422": {
                        "description": "Validation failed"
                    }
                }
            }
        },
        "/api/attendees/{id}": {
            "get": {
                "tags": [
                    "Attendees"
                ],
                "summary": "Get attendee by ID",
                "operationId": "b1ede3ccf9c8db6b7084bea2c3b0b34b",
                "parameters": [
                    {
                        "name": "id",
                        "in": "path",
                        "description": "Attendee ID",
                        "required": true,
                        "schema": {
                            "type": "integer"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "Attendee found",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/Attendee"
                                }
                            }
                        }
                    },
                    "404": {
                        "description": "Attendee not found"
                    }
                }
            },
            "put": {
                "tags": [
                    "Attendees"
                ],
                "summary": "Update attendee",
                "operationId": "42b6aa1e8b15a60617697ffd254a656e",
                "parameters": [
                    {
                        "name": "id",
                        "in": "path",
                        "description": "Attendee ID",
                        "required": true,
                        "schema": {
                            "type": "integer"
                        }
                    }
                ],
                "requestBody": {
                    "required": true,
                    "content": {
                        "application/json": {
                            "schema": {
                                "properties": {
                                    "name": {
                                        "type": "string",
                                        "example": "Jane Doe"
                                    },
                                    "email": {
                                        "type": "string",
                                        "format": "email",
                                        "example": "jane@example.com"
                                    }
                                },
                                "type": "object"
                            }
                        }
                    }
                },
                "responses": {
                    "200": {
                        "description": "Attendee updated",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/Attendee"
                                }
                            }
                        }
                    },
                    "404": {
                        "description": "Attendee not found"
                    }
                }
            },
            "delete": {
                "tags": [
                    "Attendees"
                ],
                "summary": "Delete attendee",
                "operationId": "737979a7a5f77aaaccf1e47a60af5469",
                "parameters": [
                    {
                        "name": "id",
                        "in": "path",
                        "description": "Attendee ID",
                        "required": true,
                        "schema": {
                            "type": "integer"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "Attendee deleted"
                    },
                    "404": {
                        "description": "Attendee not found"
                    }
                }
            }
        },
        "/api/register": {
            "post": {
                "tags": [
                    "Auth"
                ],
                "summary": "Register a new user",
                "operationId": "8a56853624e025573120a09a4c75d468",
                "requestBody": {
                    "required": true,
                    "content": {
                        "application/json": {
                            "schema": {
                                "required": [
                                    "name",
                                    "email",
                                    "password",
                                    "password_confirmation"
                                ],
                                "properties": {
                                    "name": {
                                        "type": "string"
                                    },
                                    "email": {
                                        "type": "string",
                                        "format": "email"
                                    },
                                    "password": {
                                        "type": "string",
                                        "format": "password"
                                    },
                                    "password_confirmation": {
                                        "type": "string",
                                        "format": "password"
                                    }
                                },
                                "type": "object"
                            }
                        }
                    }
                },
                "responses": {
                    "200": {
                        "description": "User registered successfully",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "properties": {
                                        "user": {
                                            "$ref": "#/components/schemas/User"
                                        },
                                        "token": {
                                            "type": "string"
                                        }
                                    },
                                    "type": "object"
                                }
                            }
                        }
                    },
                    "422": {
                        "description": "Validation error"
                    }
                }
            }
        },
        "/api/login": {
            "post": {
                "tags": [
                    "Auth"
                ],
                "summary": "Login user and return token",
                "operationId": "a3b306d14572d1f4bd6c064b3233e7b8",
                "requestBody": {
                    "required": true,
                    "content": {
                        "application/json": {
                            "schema": {
                                "required": [
                                    "email",
                                    "password"
                                ],
                                "properties": {
                                    "email": {
                                        "type": "string",
                                        "format": "email"
                                    },
                                    "password": {
                                        "type": "string",
                                        "format": "password"
                                    }
                                },
                                "type": "object"
                            }
                        }
                    }
                },
                "responses": {
                    "200": {
                        "description": "User logged in successfully",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "properties": {
                                        "user": {
                                            "$ref": "#/components/schemas/User"
                                        },
                                        "token": {
                                            "type": "string"
                                        }
                                    },
                                    "type": "object"
                                }
                            }
                        }
                    },
                    "401": {
                        "description": "Invalid credentials"
                    }
                }
            }
        },
        "/api/logout": {
            "post": {
                "tags": [
                    "Auth"
                ],
                "summary": "Logout user and revoke token",
                "operationId": "fe8f3429cd6979b3b4517e186505f9f9",
                "responses": {
                    "200": {
                        "description": "User logged out successfully",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "properties": {
                                        "message": {
                                            "type": "string"
                                        }
                                    },
                                    "type": "object"
                                }
                            }
                        }
                    }
                },
                "security": [
                    {
                        "sanctum": []
                    }
                ]
            }
        },
        "/api/bookings": {
            "get": {
                "tags": [
                    "Bookings"
                ],
                "summary": "Get all bookings with attendee and event",
                "operationId": "eb7c332e8ba161904a1c0071040f61a5",
                "responses": {
                    "200": {
                        "description": "Successful response",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "type": "array",
                                    "items": {
                                        "$ref": "#/components/schemas/Booking"
                                    }
                                }
                            }
                        }
                    }
                }
            },
            "post": {
                "tags": [
                    "Bookings"
                ],
                "summary": "Create a booking",
                "operationId": "e33fa5a6507581f9b1e0d710a9a130d1",
                "requestBody": {
                    "required": true,
                    "content": {
                        "application/json": {
                            "schema": {
                                "required": [
                                    "event_id",
                                    "attendee_id"
                                ],
                                "properties": {
                                    "event_id": {
                                        "type": "integer",
                                        "example": 1
                                    },
                                    "attendee_id": {
                                        "type": "integer",
                                        "example": 3
                                    }
                                },
                                "type": "object"
                            }
                        }
                    }
                },
                "responses": {
                    "201": {
                        "description": "Booking created",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/Booking"
                                }
                            }
                        }
                    },
                    "409": {
                        "description": "Booking conflict (duplicate or full event)"
                    },
                    "422": {
                        "description": "Validation error"
                    }
                }
            }
        },
        "/api/bookings/{id}": {
            "delete": {
                "tags": [
                    "Bookings"
                ],
                "summary": "Cancel a booking",
                "operationId": "9f51d8752d2471c30540b89c13e933df",
                "parameters": [
                    {
                        "name": "id",
                        "in": "path",
                        "description": "Booking ID",
                        "required": true,
                        "schema": {
                            "type": "integer"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "Booking cancelled successfully"
                    },
                    "404": {
                        "description": "Booking not found"
                    }
                }
            }
        },
        "/api/events": {
            "get": {
                "tags": [
                    "Events"
                ],
                "summary": "List events with optional search and date filters",
                "operationId": "7058ab7c89d20c752b6afd6d808f6526",
                "parameters": [
                    {
                        "name": "search",
                        "in": "query",
                        "description": "Search events by title",
                        "required": false,
                        "schema": {
                            "type": "string"
                        }
                    },
                    {
                        "name": "date",
                        "in": "query",
                        "description": "Filter events by date (YYYY-MM-DD)",
                        "required": false,
                        "schema": {
                            "type": "string",
                            "format": "date"
                        }
                    },
                    {
                        "name": "limit",
                        "in": "query",
                        "description": "Number of events per page",
                        "required": false,
                        "schema": {
                            "type": "integer"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "Paginated list of events",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "properties": {
                                        "data": {
                                            "type": "array",
                                            "items": {
                                                "$ref": "#/components/schemas/Event"
                                            }
                                        }
                                    },
                                    "type": "object"
                                }
                            }
                        }
                    }
                },
                "security": [
                    {
                        "sanctum": []
                    }
                ]
            },
            "post": {
                "tags": [
                    "Events"
                ],
                "summary": "Create a new event",
                "operationId": "508895e03d7f10edac84357084c87b20",
                "requestBody": {
                    "required": true,
                    "content": {
                        "application/json": {
                            "schema": {
                                "required": [
                                    "title",
                                    "date",
                                    "location",
                                    "capacity"
                                ],
                                "properties": {
                                    "title": {
                                        "type": "string",
                                        "example": "Tech Conference 2025"
                                    },
                                    "description": {
                                        "type": "string",
                                        "example": "A full-day event on AI & Cloud"
                                    },
                                    "date": {
                                        "type": "string",
                                        "format": "date",
                                        "example": "2025-07-25"
                                    },
                                    "location": {
                                        "type": "string",
                                        "example": "India"
                                    },
                                    "capacity": {
                                        "type": "integer",
                                        "example": 300
                                    }
                                },
                                "type": "object"
                            }
                        }
                    }
                },
                "responses": {
                    "201": {
                        "description": "Event created",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/Event"
                                }
                            }
                        }
                    },
                    "422": {
                        "description": "Validation failed"
                    }
                },
                "security": [
                    {
                        "sanctum": []
                    }
                ]
            }
        },
        "/api/events/{id}": {
            "get": {
                "tags": [
                    "Events"
                ],
                "summary": "Get a specific event",
                "operationId": "6f743f71f7a88dbe57be1d9c9ebf47cb",
                "parameters": [
                    {
                        "name": "id",
                        "in": "path",
                        "description": "ID of the event",
                        "required": true,
                        "schema": {
                            "type": "integer"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "Event found",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/Event"
                                }
                            }
                        }
                    },
                    "404": {
                        "description": "Event not found"
                    }
                },
                "security": [
                    {
                        "sanctum": []
                    }
                ]
            },
            "put": {
                "tags": [
                    "Events"
                ],
                "summary": "Update an existing event",
                "operationId": "fb130dcf1ab4d7abbd3a173741df1f8f",
                "parameters": [
                    {
                        "name": "id",
                        "in": "path",
                        "description": "ID of the event to update",
                        "required": true,
                        "schema": {
                            "type": "integer"
                        }
                    }
                ],
                "requestBody": {
                    "content": {
                        "application/json": {
                            "schema": {
                                "properties": {
                                    "title": {
                                        "type": "string",
                                        "example": "Updated Conference"
                                    },
                                    "description": {
                                        "type": "string",
                                        "example": "Updated description"
                                    },
                                    "date": {
                                        "type": "string",
                                        "format": "date",
                                        "example": "2025-08-01"
                                    },
                                    "location": {
                                        "type": "string",
                                        "example": "New Delhi"
                                    },
                                    "capacity": {
                                        "type": "integer",
                                        "example": 500
                                    }
                                },
                                "type": "object"
                            }
                        }
                    }
                },
                "responses": {
                    "200": {
                        "description": "Event updated",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/Event"
                                }
                            }
                        }
                    },
                    "422": {
                        "description": "Validation failed"
                    }
                },
                "security": [
                    {
                        "sanctum": []
                    }
                ]
            },
            "delete": {
                "tags": [
                    "Events"
                ],
                "summary": "Delete an event",
                "operationId": "b8c8f4b41a32532f5e9f7146e511bc61",
                "parameters": [
                    {
                        "name": "id",
                        "in": "path",
                        "description": "ID of the event",
                        "required": true,
                        "schema": {
                            "type": "integer"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "Event deleted"
                    },
                    "404": {
                        "description": "Event not found"
                    }
                },
                "security": [
                    {
                        "sanctum": []
                    }
                ]
            }
        }
    },
    "components": {
        "schemas": {
            "Attendee": {
                "title": "Attendee",
                "required": [
                    "name",
                    "email"
                ],
                "properties": {
                    "id": {
                        "type": "integer",
                        "readOnly": true
                    },
                    "name": {
                        "type": "string"
                    },
                    "email": {
                        "type": "string",
                        "format": "email"
                    },
                    "created_at": {
                        "type": "string",
                        "format": "date-time",
                        "readOnly": true
                    },
                    "updated_at": {
                        "type": "string",
                        "format": "date-time",
                        "readOnly": true
                    }
                },
                "type": "object"
            },
            "Booking": {
                "title": "Booking",
                "required": [
                    "id",
                    "event_id",
                    "attendee_id"
                ],
                "properties": {
                    "id": {
                        "type": "integer"
                    },
                    "event_id": {
                        "type": "integer"
                    },
                    "attendee_id": {
                        "type": "integer"
                    },
                    "event": {
                        "$ref": "#/components/schemas/Event"
                    },
                    "attendee": {
                        "$ref": "#/components/schemas/Attendee"
                    },
                    "created_at": {
                        "type": "string",
                        "format": "date-time"
                    },
                    "updated_at": {
                        "type": "string",
                        "format": "date-time"
                    }
                },
                "type": "object"
            },
            "Event": {
                "required": [
                    "title",
                    "date",
                    "location",
                    "capacity",
                    "user_id"
                ],
                "properties": {
                    "id": {
                        "type": "integer"
                    },
                    "title": {
                        "type": "string"
                    },
                    "description": {
                        "type": "string"
                    },
                    "date": {
                        "type": "string",
                        "format": "date"
                    },
                    "location": {
                        "type": "string"
                    },
                    "capacity": {
                        "type": "integer"
                    },
                    "user_id": {
                        "type": "integer"
                    },
                    "created_at": {
                        "type": "string",
                        "format": "date-time"
                    },
                    "updated_at": {
                        "type": "string",
                        "format": "date-time"
                    }
                },
                "type": "object"
            },
            "User": {
                "title": "User",
                "description": "User model",
                "required": [
                    "name",
                    "email"
                ],
                "properties": {
                    "id": {
                        "type": "integer"
                    },
                    "name": {
                        "type": "string"
                    },
                    "email": {
                        "type": "string",
                        "format": "email"
                    },
                    "email_verified_at": {
                        "type": "string",
                        "format": "date-time"
                    },
                    "created_at": {
                        "type": "string",
                        "format": "date-time"
                    },
                    "updated_at": {
                        "type": "string",
                        "format": "date-time"
                    }
                },
                "type": "object"
            }
        },
        "securitySchemes": {
            "sanctum": {
                "type": "http",
                "description": "Use a bearer token to access these endpoints",
                "name": "Authorization",
                "in": "header",
                "bearerFormat": "JWT",
                "scheme": "bearer"
            }
        }
    },
    "tags": [
        {
            "name": "Attendees",
            "description": "API Endpoints for managing attendees"
        },
        {
            "name": "Events",
            "description": "API Endpoints for managing Events"
        },
        {
            "name": "Auth",
            "description": "Auth"
        },
        {
            "name": "Bookings",
            "description": "Bookings"
        }
    ]
}